#ifndef D
#define D(ID, NAME)
#endif

#ifndef OP
#define OP(ID, NAME, GRAM) D(ID, NAME)
#endif
#ifndef KW
#define KW(ID, NAME) D(ID, NAME)
#endif
#ifndef SP
#define SP(ID, NAME) D(ID, NAME)
#endif

OP(ELLIPSIS        , "...", str("..."))
OP(RIGHT_ASSIGN    , ">>=", str(">>="))
OP(LEFT_ASSIGN     , "<<=", str("<<="))
OP(ADD_ASSIGN      , "+=",  str("+="))
OP(SUB_ASSIGN      , "-=",  str("-="))
OP(MUL_ASSIGN      , "*=",  str("*="))
OP(DIV_ASSIGN      , "/=",  str("/="))
OP(MOD_ASSIGN      , "%=",  str("%="))
OP(AND_ASSIGN      , "&=",  str("&="))
OP(XOR_ASSIGN      , "^=",  str("^="))
OP(OR_ASSIGN       , "|=",  str("|="))
OP(RIGHT_OP        , ">>",  str(">>"))
OP(LEFT_OP         , "<<",  str("<<"))
OP(INC_OP          , "++",  str("++"))
OP(DEC_OP          , "--",  str("--"))
OP(PTR_OP          , "->",  str("->"))
OP(AND_OP          , "&&",  str("&&"))
OP(OR_OP           , "||",  str("||"))
OP(LE_OP           , "<=",  str("<="))
OP(GE_OP           , ">=",  str(">="))
OP(EQ_OP           , "==",  str("=="))
OP(NE_OP           , "!=",  str("!="))
OP(LEFT_BRACE      , "{",   ch('{') | str("<%"))
OP(RIGHT_BRACE     , "}",   ch('}') | str("%>"))
OP(LEFT_BRACKET    , "[",   ch('[') | str("<:"))
OP(RIGHT_BRACKET   , "]",   ch(']') | str(":>"))
OP(SEMICOLON       , ";",   ch(';'))
OP(COMMA           , ",",   ch(','))
OP(COLON           , ":",   ch(':'))
OP(ASSIGN          , "=",   ch('='))
OP(LEFT_PAREN      , "(",   ch('('))
OP(RIGHT_PAREN     , ")",   ch(')'))
OP(DOT             , ".",   ch('.'))
OP(ADDROF          , "&",   ch('&'))
OP(EXCLAM          , "!",   ch('!'))
OP(TILDE           , "~",   ch('~'))
OP(MINUS           , "-",   ch('-'))
OP(PLUS            , "+",   ch('+'))
OP(STAR            , "*",   ch('*'))
OP(SLASH           , "/",   ch('/'))
OP(PERCENT         , "%",   ch('%'))
OP(LT_OP           , "<",   ch('<'))
OP(GT_OP           , ">",   ch('>'))
OP(XOR             , "^",   ch('^'))
OP(OR              , "|",   ch('|'))
OP(QUEST           , "?",   ch('?'))

KW(AUTO            , "auto")
KW(BREAK           , "break")
KW(CASE            , "case")
KW(CHAR            , "char")
KW(CONST           , "const")
KW(CONTINUE        , "continue")
KW(DEFAULT         , "default")
KW(DO              , "do")
KW(DOUBLE          , "double")
KW(ELSE            , "else")
KW(ENUM            , "enum")
KW(EXTERN          , "extern")
KW(FOR             , "for")
KW(FLOAT           , "float")
KW(GOTO            , "goto")
KW(IF              , "if")
KW(INT             , "int")
KW(LONG            , "long")
KW(REGISTER        , "register")
KW(RETURN          , "return")
KW(SHORT           , "short")
KW(SIGNED          , "signed")
KW(SIZEOF          , "sizeof")
KW(STATIC          , "static")
KW(STRUCT          , "struct")
KW(SWITCH          , "switch")
KW(TYPEDEF         , "typedef")
KW(UNION           , "union")
KW(UNSIGNED        , "unsigned")
KW(VOID            , "void")
KW(VOLATILE        , "volatile")
KW(WHILE           , "while")

SP(IDENTIFIER      , "identifier")
SP(STRING_LIT      , "string literal")
SP(LINE            , "line control")
SP(PRAGMA          , "pragma")
SP(CONSTANT        , "constant literal")

#undef D
#undef SP
#undef KW
#undef OP
